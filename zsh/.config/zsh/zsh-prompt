#!/bin/sh

## autoload vcs and colors
autoload -Uz vcs_info
autoload -U colors && colors

# enable only git 
zstyle ':vcs_info:*' enable git 

# setup a hook that runs before every ptompt. 
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst

# add a function to check for untracked files in the directory.
# from https://github.com/zsh-users/zsh/blob/master/Misc/vcs_info-examples
zstyle ':vcs_info:git*+set-message:*' hooks git-untracked
# 
+vi-git-untracked(){
    if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
        git status --porcelain | grep '??' &> /dev/null ; then
        # This will show the marker if there are any untracked files in repo.
        # If instead you want to show the marker only if there are untracked
        # files in $PWD, use:
        #[[ -n $(git ls-files --others --exclude-standard) ]] ; then
        hook_com[staged]+='!' # signify new files with a bang
    fi
}

zstyle ':vcs_info:*' check-for-changes true
# zstyle ':vcs_info:git:*' formats " %r/%S %b %m%u%c "
zstyle ':vcs_info:git:*' formats " %{$fg[blue]%}(%{$fg[red]%}%m%u%c%{$fg[yellow]%}%{$fg[magenta]%} %b%{$fg[blue]%})"

# format our main prompt for hostname current folder, and permissions.
PROMPT="%B%{$fg[blue]%}[%{$fg[white]%}%n%{$fg[red]%}@%{$fg[white]%}%m%{$fg[blue]%}] %(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )%{$fg[cyan]%}%c%{$reset_color%}"
# PROMPT="%{$fg[green]%}%n@%m %~ %{$reset_color%}%#> "
PROMPT+="\$vcs_info_msg_0_ "
# TODO look into this for more colors
# https://stevelosh.com/blog/2010/02/my-extravagant-zsh-prompt/
# also ascii escape codes

# oxide{{{
# setopt PROMPT_SUBST

# autoload -U add-zsh-hook
# autoload -Uz vcs_info

# # Use True color (24-bit) if available.
# if [[ "${terminfo[colors]}" -ge 256 ]]; then
    # oxide_turquoise="%F{73}"
    # oxide_orange="%F{179}"
    # oxide_red="%F{167}"
    # oxide_limegreen="%F{107}"
# else
    # oxide_turquoise="%F{cyan}"
    # oxide_orange="%F{yellow}"
    # oxide_red="%F{red}"
    # oxide_limegreen="%F{green}"
# fi

# # Reset color.
# oxide_reset_color="%f"

# # VCS style formats.
# FMT_UNSTAGED="%{$oxide_reset_color%} %{$oxide_orange%}●"
# FMT_STAGED="%{$oxide_reset_color%} %{$oxide_limegreen%}✚"
# FMT_ACTION="(%{$oxide_limegreen%}%a%{$oxide_reset_color%})"
# FMT_VCS_STATUS="on %{$oxide_turquoise%} %b%u%c%{$oxide_reset_color%}"

# zstyle ':vcs_info:*' enable git svn
# zstyle ':vcs_info:*' check-for-changes true
# zstyle ':vcs_info:*' unstagedstr    "${FMT_UNSTAGED}"
# zstyle ':vcs_info:*' stagedstr      "${FMT_STAGED}"
# zstyle ':vcs_info:*' actionformats  "${FMT_VCS_STATUS} ${FMT_ACTION}"
# zstyle ':vcs_info:*' formats        "${FMT_VCS_STATUS}"
# zstyle ':vcs_info:*' nvcsformats    ""
# zstyle ':vcs_info:git*+set-message:*' hooks git-untracked

# # Check for untracked files.
# +vi-git-untracked() {
    # if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
            # git status --porcelain | grep --max-count=1 '^??' &> /dev/null; then
        # hook_com[staged]+="%{$oxide_reset_color%} %{$oxide_red%}●"
    # fi
# }

# # Executed before each prompt.
# add-zsh-hook precmd vcs_info

# # Oxide prompt style.
# PROMPT=$'\n%{$oxide_limegreen%}%~%{$oxide_reset_color%} ${vcs_info_msg_0_}\n%(?.%{%F{white}%}.%{$oxide_red%})%(!.#.❯)%{$oxide_reset_color%} '}}}
